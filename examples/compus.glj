(ns examples.compus
  (:require [mrat.core :refer :all]))

(defugen mod-pulse-synth
  [gate 1
   note 52
   cutoff-freq (mtof 100)
   attack 0.001
   decay 0
   sustain 1
   release 1
   pan 0
   amp 1
   mod-phase 0.25
   mod-pulse-width 0.5
   mod-invert-wave 0
   mod-range 5
   mod-phase-offset 0
   pulse-width 0.5]
  (let [mod-rate (/ 1 mod-phase)
        min-note note
        max-note (+ mod-range note)
        mod-double-phase-offset (* 2 mod-phase-offset)
        ctl-wave (- (* 2 (lfpulse mod-rate :iphase mod-phase-offset :duty mod-pulse-width)) 1)
        ctl-wave-mul (- (* 2 (if (> mod-invert-wave 0) 1 0)) 1)
        ctl-wave (* -1 ctl-wave ctl-wave-mul)
        mod-note (+ min-note (* ctl-wave (/ (- max-note min-note) 2)))
        freq (mtof mod-note)
        snd (pulse freq :duty pulse-width)
        snd (rlpf snd cutoff-freq)
        amp-fudge 0.8
        envelope (env-adsr gate [attack decay sustain release])]
    (pan2 (* amp-fudge envelope snd) pan amp)))

(def compus (load-sample :loop_compus))
(def beats-per-loop 4)
(def dur (/ (count compus) 44100 beats-per-loop))

(def trig (impulse (/ 1 dur)))

(def trig4 (impulse (/ 1 (* 4 dur))))

(def loopr
  (smp compus :trigger trig4 :rate (choose trig4 [0.5 1 1 1 1 2])))

(def bass
  (smp :bass_voxy_c
            :trigger (choose trig [0 0 0 1])
            :rate (choose trig [0.5 0.5 1 1 2 4])))

(def bass1 (mod-pulse-synth trig C1
                            :cutoff-freq (mtof (rrand 50 90 trig))
                            :amp (rrand 0.5 1 trig)
                            :release 1
                            :mod-phase (choose trig [0.25 0.5 1])))

(def bass2 (mod-pulse-synth trig C2
                            :cutoff-freq (mtof 60)
                            :amp 0.35
                            :mod-phase 0.25
                            :mod-range (choose trig [24 36 34])
                            :pulse-width (rrand trig 0 1)
                            :release 2))

(play (+ loopr
         bass
         bass1
         bass2
         ))
