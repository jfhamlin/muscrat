(ns examples.qwerty
  (:require [mrat.core :refer :all] :reload
            [mrat.welsh :refer :all] :reload
            [mrat.abc :as abc] :reload
            [mrat.midi :refer :all]))

(def qwerty (qwerty-in "keyboard" :voices 8))

(def melody-score
  (abc/score
   {:clef :bass
    :tempo [1/4 70]
    :key 'D
    :meter [4 4]
    ;; the melody of last christmas, by wham!
    :body
    '[E3/2 E D A./2 | E/2 E/2 F/2 D3/2 B. | E/2 E/2 F D z/2 B./2 | C/2 D/2 C/2 B. z |
      F3/2 E3/2 z/2 B./2 | F/2 G/2 F/2 E z/2 B./2 | C/2 D/2 C/2 C D C A.3/2 z2 |
      ;; repeat
      E3/2 E D A./2 | E/2 E/2 F/2 D3/2 B. | E/2 E/2 F D z/2 B./2 | C/2 D/2 C/2 B. z |
      F3/2 E3/2 z/2 B./2 | F/2 G/2 F/2 E z/2 B./2 | C/2 D/2 C/2 C D C A.3/2 z2 |

      ;; bridge
      A.2 A3/2 A.9/4 A./2 B./2 C/2 D/2 | E D B.2 A/2 F/2 D/2 B./2 | G.6 B/2 G/2 E/2 C/2 |
      A.4 | z4 |

      ;; next part
      z E E/2 D D/2 | A3/2 F3/4 E/4 D3/2 | z/2 E/2 E/2 E/2 E/2 D D/2 | B/2 B F E D3/2 ;; need slur
      F/2 B./4 D3/4 E3/2 | F F/2 B./4 D3/4 E2 D D/2 D/2 C/2 D/2 C/2 | D/2 C/2 D/2 B./2 A./2 |
      A.7/2 z3/2 D/2 | C/2 D/2 C/2 D/2 C/2 D3/2 | E D/2 C D/2 E/2 C D/2 C/2 D/2 C D |
      F/2 E/2 D/2 E E/2 D/2 F | E/2 D/2 E D/2 C/2 D/2 | D C/2 D C/2 D C/2 | D/2 C/2 D/2 A.5/2 |

      ;; back to the beginning
      E3/2 E D A./2 | E/2 E/2 F/2 D3/2 B. | E/2 E/2 F D z/2 B./2 | C/2 D/2 C/2 B. z |
      F3/2 E3/2 z/2 B./2 | F/2 G/2 F/2 E z/2 B./2 | C/2 D/2 C/2 C D C A.3/2 z2 |
      ;; repeat
      E3/2 E D A./2 | E/2 E/2 F/2 D3/2 B. | E/2 E/2 F D z/2 B./2 | C/2 D/2 C/2 B. z |
      F3/2 E3/2 z/2 B./2 | F/2 G/2 F/2 E z/2 B./2 | C/2 D/2 C/2 C D C A.3/2 z2 |

      ;; bridge
      A.2 A3/2 A.9/4 A./2 B./2 C/2 D/2 | E D B.2 A/2 F/2 D/2 B./2 | G.6 B/2 G/2 E/2 C/2 |
      A.4 | z4 |

      ]}))

(def synth-score
  (abc/score
   {:clef :treble
    :tempo [1/4 70]
    :key 'D
    :meter [4 4]
    :body
    '[C]}))

;; (def harmony-score
;;   (abc/score
;;    {:clef :bass
;;     :tempo [1/4 70]
;;     :key 'D
;;     :meter [4 4]
;;     ;; the melody of last christmas, by wham!
;;     :body
;;     '[]}))

(defn voice->synth
  [{:keys [pitches durs note-clock]}]
  (let [[a s r] (mapv #(* durs %) [0.003 0.9 0.097])]
    (-> (tri pitches)
        (lores (* 3 pitches) 0.3)
        (* (env note-clock [0 1 1 0] [a s r])))))

(def melody
  (sum (map voice->synth (:voices melody-score))))

(defn synth
  [gate freq]
  (let [amp (env gate [0 1 1 0] [0.01 0.1 0.01] :release-node 2)
        cutoff (env gate [1.5 9 7 4 1] [0.2 0.5 0.25 0.1] :interp :exp :release-node 3)]
    (-> (sin freq)
        (lores (* cutoff freq) 0.0)
        (* amp))))



(play (-> (sum (map #(synth (:onoff %) (midifreq (:note %))) qwerty))
          (+ (* melody (decibels -5)))
          ;; (+ (-> (sound-in) wfold))
          freeverb
          (* (decibels -10))))
