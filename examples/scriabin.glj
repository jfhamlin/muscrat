(ns examples.scriabin
  (:require [mrat.core :refer :all]
            [mrat.abc :as abc]))

(def tempo-in (midi-in "tempo" :cc :controller 70 :default 0.5))
(def tempo (* 2 72 tempo-in)) ;; 72 quarter notes per minute default

(def dynamics-in (midi-in "dynamics" :cc :controller 74 :default 0.5))
(def dynamics-db (dbamp (- (* 40 (- 1.0 dynamics-in)))))

(def room-size (midi-in "room-size" :cc :controller 71 :default 0.0))

;; transcription of scriabin's Four Preludes, Op. 22, No. 1
(def score
  (abc/score
   {:tempo [1/4 tempo] ;; 72 quarter notes per minute
    :meter [3 4]
    :key 'G#m
    :body '[d z d7/2 d/2 | d2 c7/2 B/2   | d4 G3/2 $$F/2 | A6           | G z g7/2 g/2 |
            g2  f7/2 e/2 | g4 c3/2 $B/2  | d6            | c z G7/2 G/2 | G2  F7/2 E/2 |
            F2  F7/2 F/2 | F2 E7/2 F/2   | G4 D2         | $$C2 A2  G2  | G6 |  $$F6   |
            G2 G7/2 G/2  | G2 F7/2 E/2   | G2 F7/2 E/2   | F6           | E2 E7/2 E/2  |
            E2 =D7/2 =C/2 | E2 =D7/2 =C/2 | =D6 | =C2 $B.7/2 $B./2 | $B.2 =B.2 B2 | A2 A.7/2 A./2 |
            ;; chords here
            A.2 G.2 $$c2 | d2 d7/2 d/2 | d2 c7/2 B/2 | d4 G3/2 $$F/2 | A6 | z24
            ]}))

(def score-bass
  (abc/score
   {:clef :bass
    :tempo [1/4 tempo] ;; 72 quarter notes per minute
    :meter [3 4]
    :key 'G#m
    :transpose -24
    :body '[z D G d b g'  | z D A f a f'    | z D B g g e'  | z D A $$f a d'  | z D c g e' c''  |
            z D d b d' b' | z D e c' c' =a' | z D d $b g' G | z E =A e c' c'' | z D =A f c' c'' |
            z C F e =a =a' | z =C F e =a =a' | z B. E e g g' | z A. A e $$c' a' | z D A e a $$c' | z D A d a d' |
            z E =A e c' c'' | z D =A f c' c'' | z C F e =a =a' | z =C F e =a =a' | z =C =F e =a =a' |
            z B. =F =d =a =a' | z =A. =D =c =f =f' | z G. =D =c =f =f' | z G. $D d d d' | z $$F. $$F d d d' | z $F. $F d d d' |
            z E. E A g $$c' | z D. G d b g' | z D. A f a f' | z D. B g g e' | z D. A $$f d'2 | z24
            ]}))

(def first-voice (first (:voices score)))
(def first-voice-bass (first (:voices score-bass)))

(def root (:pitches first-voice))
(def root-bass (:pitches first-voice-bass))

(def dur (:durs first-voice))
(def dur-bass (:durs first-voice-bass))

(def metro (:note-clock first-voice))
(def metro-bass (:note-clock first-voice-bass))

(def attack 0.0006)
(def release 0.1)
(defn mkenv
  [metro dur]
  (env metro [0 1 0.8 0] [attack (- dur attack release) release]))

(def envelope (mkenv metro dur))
(def envelope-bass (mkenv metro-bass dur-bass))

(def tune
  (let [sig (-> (saw (* root (semitones (sin 8 :mul 0.05))) :duty 0.8)
                (lores (* root (semitones 7)) 0.8)
                (* envelope))
        sig-bass (-> (sin (* root-bass (semitones (sin 6 :mul 0.1))) :duty 0.8)
                     (lores (* root-bass 3) 0.9)
                     (* envelope-bass))]
    (-> (+ sig (* (dbamp -5) sig-bass))
        (* dynamics-db)
        (freeverb :room-size room-size))))

;;(wavout tune :filename "scriabin.wav")

(play tune)
