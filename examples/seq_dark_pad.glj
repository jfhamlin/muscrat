(ns examples.synth
  (:require [mrat.core :refer :all] :reload
            [mrat.midi :refer :all] :reload
            [mrat.welsh] :reload))

(defn pad
  ([gate] (pad gate 440))
  ([gate freq] (pad gate freq (decibels -20)))
  ([gate freq amp]
   (let [size 32
         freqs (map #(* freq (semitones %)) (repeatedly size #(* 0.1 (noise 8))))
         snds (map #(saw %) freqs)
         snds (map #(delayl % (* 0.01 (math$rand.Float64))) snds)
         snd (sum snds)
         asr (env-asr gate [1 1 8])]
     (* amp asr snd))))

(def ivals (map semitones [3 7 12 14 15 24]))

(def trig (sqr 0.5))

(def s (sequencer trig [E2 G2 Fs2 A2 C2 B2]))

(play (sum
       (map #(-> (pad trig (* s %) (decibels -35))
                 (delayl (* 0.01 (math$rand.Float64)))
                 (lores (* 4 s) 0.8)
                 (freeverb :room-size 0.6))
            ivals)))

