;; bell relative frequencies
;; from https://en.wikipedia.org/wiki/Strike_tone
(def bellRatios
  [0.500
   1.000
   1.183
   1.506
   2.000
   2.514
   2.662
   3.011
   4.166
   5.433
   6.796
   8.215])

;; relative amplitudes of each bell frequency
;; approximating a real bell.
(def bellRatioWeights
  (apply vector (map decibels
                     [-20
                      -8
                      -9
                      0
                      -3
                      -9
                      -10
                      -16
                      -28
                      -31
                      -38
                      -44
                      ])))

(def (bell freq)
  (let ((freqs (apply vector (map (fn (ratio) (* freq ratio (remap (~sin 16) (cents -2) (cents 2)))) bellRatios))))
    (apply ~mixer
           (reduce (fn (acc i) (conj acc (~sin (freqs i)) (bellRatioWeights i)))
                   (range 0 (count freqs))
                   '()))))
;;  (~sin (* freq (first bellRatios))))
    ;; by default, mixer will sum all inputs with equal weights,
    ;; summing to 1. avoids clipping.
  ;;(apply sum (map (fn (w) (* (/ 1 (count bellRatios)) (~sin w))) (map (fn (r) (* r freq)) bellRatios))))


