(def sin mrat.osc.sin)
(def saw mrat.osc.saw)
(def noise mrat.osc.noise)

(def print mrat.core.io.print)
(def freeverb mrat.effects.freeverb)
(def delay mrat.effects.delay)
(def clip mrat.effects.clip)
(def mixer mrat.effects.mixer)

(def bellRatios
    (list
     0.500
     1.000
     1.183
     1.506
     2.000
     2.514
     2.662
     3.011
     4.166
     5.433
     6.796
     8.215))

(def (map fn lst)
    (if (eq? (length lst) 0)
        (concat (list (fn (first lst))) (map fn (rest lst)))
        (list)))

(def (reduce fn lst acc)
    (if (eq? (length lst) 0)
        (reduce fn (rest lst) (fn acc (first lst)))
        acc))
(def (sum lst) (apply + lst))
(def (bell freq)
    (apply mixer (map sin (map (lambda (r) (* r freq)) bellRatios))))

;; the frequencies for a gothic church organ chord
(def churchChord (list 261.63 329.63 392.00 523.25 659.25 783.99 1046.50))
(def bells (apply mixer (map bell churchChord)))
(def bellOut ())
(def mixed
    (mixer bells
           (delay (freeverb bells) 0.2)
       ))
(mrat.core.io.out (* 0 mixed))
