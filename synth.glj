(ns synth
  (:require [mrat.core :refer :all] :reload
            [mrat.midi :refer :all]
            [mrat.scales :refer :all]))

(def root G3)
(def bps 6.5)
(def trig (sqr bps :duty 0.9))


(def melody-seq
  (sequencer trig
             (map #(* root (semitones %))
                  [0  7  12  0  7 12  5  7 10  8  3 -2 -4  5])))
(def melody
  (-> (sin melody-seq)
      (* (env-asr trig [0.005 1 0.005]))))

(def drone
  (let [drone-root G4]
    (-> (sqr drone-root :duty 0.2)
        (lores (* 2 drone-root) 0.5))))
        ;; (* (sin bps :mul 0.25 :add 0.75))
        ;; (lores (-> (sin 1)
        ;;            (* 2 drone-root)
        ;;            (+ (* 4 drone-root)))
        ;;        0))))
        ;; (freeverb :room-size 0.5))))


(play (let [amp (decibels -10)]
        (* amp
           (+ drone
              ;; melody
              ))))

